
1、为什么 GPU 出现得远比 CPU 晚，其浮点运算性能却远远强于 CPU？     知乎


CPU上大量的晶体管被用来做Cache，而GPU上绝大部分晶体管被用来做ALU。用来做运算的晶体管多了，自然速度会快。


其实gpu的工作技术含量相比cpu低多了。cpu就像是博士生，从加减乘除到积分微分样样拿手，
难题都难不住他，但是工作量很少，只解决关键问题。相反gpu则是一大群小学生，进行整数运算和逻辑运算，
面对同样的一千道加减乘除，一千个小学生干活的速度肯定比一个博士生快得多，其实就完全是数量造成的质变，简单粗暴～

因为 GPU 几乎必定是等效于多核多线程的。例如根据资料记载 GTX295 有 480 个 CUDA 核，也就是说进行浮点运算的时候相当于 480 核心的 CPU。

造成GPU和CPU根本差别的原因在于不同的目标需求：GPU假设运行其上的工作都是高度可并行的，而CPU需要同时很好的支持并行和顺序操作。
于是，CPU需要大的片上缓存和复杂的控制逻辑，GPU则利用多线程并行运行节省了片上的大缓存，同时针对一簇线程执行同一套控制逻辑。

速度区别主要是来自于架构上的区别。架构的不同则是因为硬件的设计目的不一样。
ALU就是“算术逻辑单元（Arithmetic logic unit）”。
CPU和GPU进行计算的部分都是ALU，GPU绝大部分的芯片面积都是ALU，而且是超大阵列排布的ALU。这些ALU都是可以并行运行的，所以浮点计算速度就特别高了。
相比起来，CPU大多数面积都需要给控制单元和Cache，因为CPU要承担整个计算机的控制工作，没有GPU那么单纯。
所以GPU的程序控制能力相比CPU来说不强，稍早时候的CUDA程序像是递归都是不能用的（较新的设备上可以了）。


总结来说就是，GPU与CPU干的活不动，两者的架构也会不一样，GPU多核专注于并行计算，专一一点，而CPU杂事多，啥事都要管，自然慢。