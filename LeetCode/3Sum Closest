Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
    
    
    class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """        
        nums.sort()
        res=nums[0]+nums[1]+nums[2]
        
        for i in range(len(nums)):
            j = i + 1
            k = len(nums)-1
            while j<k:
                tmp_sum = nums[i] + nums[j] + nums[k]
                if tmp_sum == target:
                    return target
                
                if abs(tmp_sum-target) < abs(res - target):
                    res = tmp_sum
                    
                if tmp_sum > target:
                    k -= 1
                else:  
                    j += 1
                    
        return res
        
            
